#include <iostream>
#include <conio.h>
#include <windows.h>
using namespace std;
bool gameOver;
const int width = 20;
const int height = 20;
int x, y, fruitX, fruitY, score;
int tailX[100], tailY[100];
int nTail;
enum eDirecton { STOP = 0, LEFT, RIGHT, UP, DOWN};
eDirecton dir;
void design(){
    cout << "  /###############################################################################################################\\" << endl;
    cout << "  ##\033[31m                                                                                                         \033[32m\t  ##" << endl;
    cout << "  ##\033[31m   _____      __      _     ____      __   ___    _____         _____      ____       __    __      _____\033[32m\t  ##" << endl;
    cout << "  ##\033[31m   / ____\\    /  \\    / )   (    )    () ) / __)  / ___/        / ___ \\    (    )      \\ \\  / /     / ___/\033[32m\t  ##" << endl;
    cout << "  ##\033[31m  ( (___     / /\\ \\  / /    / /\\ \\    ( (_/ /    ( (__         / /   \\_)   / /\\ \\      () \\/ ()    ( (__\033[32m\t  ##" << endl;
    cout << "  ##\033[31m   \\___ \\    ) ) ) ) ) )   ( (__) )   ()   (      ) __)       ( (  ____   ( (__) )     / _  _ \\     ) __)\033[32m\t  ##" << endl;
    cout << "  ##\033[31m       ) )  ( ( ( ( ( (     )    (    () /\\ \\    ( (          ( ( (__  )   )    (     / / \\/ \\ \\   ( (\033[32m\t  ##" << endl;
    cout << "  ##\033[31m   ___/ /   / /  \\ \\/ /    /  /\\  \\   ( (  \\ \\    \\ \\___       \\ \\__/ /   /  /\\  \\   /_/      \\_\\   \\ \\___\033[32m\t  ##" << endl;
    cout << "  ##\033[31m  /____/   (_/    \\__/    /__(  )__\\  ()_)  \\_\\    \\____\\       \\____/   /__(  )__\\ (/          \\)   \\____\\\033[32m   ##" << endl;
    cout << "  ##\033[31m                                                                                                         \033[32m\t  ##" << endl;
    cout << "  \\################################################################################################################/" << endl;
    cout << "   \\##############################################################################################################/\n" << endl;
    cout << "            ____" << endl;
    cout << "\033[32m      _,.-'`_ o `;__,                \033[1;33m ____   _  _    ____          _  _      _    \n";
    cout << "\033[32m       _.-'` '---'  '                \033[1;33m|  _ \\ (_)| |  |  _ \\        (_)| |    | |\n";
    cout << "\033[32m                    ____             \033[1;33m| |_) | _ | |_ | |_) | _   _  _ | |  __| |\n";
    cout << "\033[32m                 .'`_ o `;__,        \033[1;33m|  _ < | || __||  _ < | | | || || | / _` | / _ \\| '__|\n";
    cout << "\033[32m       .       .'.'` '---'`  '       \033[1;33m| |_) || || |_ | |_) || |_| || || || (_| ||  __/| |   \n";
    cout << "\033[32m       .`-...-'.'                    \033[1;33m|____/ |_| \\__||____/  \\__,_||_||_| \\__,_| \\___||_|   \n";   
    cout << "\033[32m        `-...-'                      \033[1;33m _____                    _               _    _     \n";
    cout << "\033[32m                        _,.--.       \033[1;33m|  __ \\                  | |             | |  (_) \n";
    cout << "\033[32m    --..,_           .'`__ o  `;__   \033[1;33m| |__) | _ __   ___    __| | _   _   ___ | |_  _   ___   _ __   ___\n";
    cout << "\033[32m       `'.'.       .'.'`  '---'`  '  \033[1;33m|  ___/ | '__| / _ \\  / _` || | | | / __|| __|| | / _ \\ | '_ \\ / __|\n";
    cout << "\033[32m          '.`-...-'.'                \033[1;33m| |     | |   | (_) || (_| || |_| || (__ | |_ | || (_) || | | |\\__ \\\n";
    cout << "\033[32m            `-...-'                  \033[1;33m|_|     |_|    \\___/  \\__,_| \\__,_| \\___| \\__||_| \\___/ |_| |_|\\___/\n";
    Sleep(5000);
}
void Setup()
{
    gameOver = false;
    dir = STOP;
    x = width / 2;
    y = height / 2;
    fruitX = rand() % width;
    fruitY = rand() % height;
    score = 0;
}
void Draw()
{
    system("cls"); //system("clear");
    for (int i = 0; i < width+2; i++)
        cout << "#";
    cout << endl;

    for (int i = 0; i < height; i++)
    {
        for (int j = 0; j < width; j++)
        {
            if (j == 0)
                cout << "#";
            if (i == y && j == x)
                cout << "O";
            else if (i == fruitY && j == fruitX)
                cout << "F";
            else
            {
                bool print = false;
                for (int k = 0; k < nTail; k++)
                {
                    if (tailX[k] == j && tailY[k] == i)
                    {
                        cout << "o";
                        print = true;
                    }
                }
                if (!print)
                    cout << " ";
            }


            if (j == width - 1)
                cout << "#";
        }
        cout << endl;
    }

    for (int i = 0; i < width+2; i++)
        cout << "#";
    cout << endl;
    cout << "Score:" << score << endl;
}
void Input()
{
    if (_kbhit())
    {
        switch (_getch())
        {
        case 'a':
            dir = LEFT;
            break;
        case 'd':
            dir = RIGHT;
            break;
        case 'w':
            dir = UP;
            break;
        case 's':
            dir = DOWN;
            break;
        case 'x':
            gameOver = true;
            break;
        }
    }
}
void Logic()
{
    int prevX = tailX[0];
    int prevY = tailY[0];
    int prev2X, prev2Y;
    tailX[0] = x;
    tailY[0] = y;
    for (int i = 1; i < nTail; i++)
    {
        prev2X = tailX[i];
        prev2Y = tailY[i];
        tailX[i] = prevX;
        tailY[i] = prevY;
        prevX = prev2X;
        prevY = prev2Y;
    }
    switch (dir)
    {
    case LEFT:
        x--;
        break;
    case RIGHT:
        x++;
        break;
    case UP:
        y--;
        break;
    case DOWN:
        y++;
        break;
    default:
        break;
    }
    //if (x > width || x < 0 || y > height || y < 0)
    //  gameOver = true;
    if (x >= width) x = 0; else if (x < 0) x = width - 1;
    if (y >= height) y = 0; else if (y < 0) y = height - 1;

    for (int i = 0; i < nTail; i++)
        if (tailX[i] == x && tailY[i] == y)
            gameOver = true;

    if (x == fruitX && y == fruitY)
    {
        score += 10;
        fruitX = rand() % width;
        fruitY = rand() % height;
        nTail++;
    }
}
int main()
{
    cout << "  /###############################################################################################################\\" << endl;
    cout << "  ##\033[31m                                                                                                         \033[32m\t  ##" << endl;
    cout << "  ##\033[31m   _____      __      _     ____      __   ___    _____         _____      ____       __    __      _____\033[32m\t  ##" << endl;
    cout << "  ##\033[31m   / ____\\    /  \\    / )   (    )    () ) / __)  / ___/        / ___ \\    (    )      \\ \\  / /     / ___/\033[32m\t  ##" << endl;
    cout << "  ##\033[31m  ( (___     / /\\ \\  / /    / /\\ \\    ( (_/ /    ( (__         / /   \\_)   / /\\ \\      () \\/ ()    ( (__\033[32m\t  ##" << endl;
    cout << "  ##\033[31m   \\___ \\    ) ) ) ) ) )   ( (__) )   ()   (      ) __)       ( (  ____   ( (__) )     / _  _ \\     ) __)\033[32m\t  ##" << endl;
    cout << "  ##\033[31m       ) )  ( ( ( ( ( (     )    (    () /\\ \\    ( (          ( ( (__  )   )    (     / / \\/ \\ \\   ( (\033[32m\t  ##" << endl;
    cout << "  ##\033[31m   ___/ /   / /  \\ \\/ /    /  /\\  \\   ( (  \\ \\    \\ \\___       \\ \\__/ /   /  /\\  \\   /_/      \\_\\   \\ \\___\033[32m\t  ##" << endl;
    cout << "  ##\033[31m  /____/   (_/    \\__/    /__(  )__\\  ()_)  \\_\\    \\____\\       \\____/   /__(  )__\\ (/          \\)   \\____\\\033[32m   ##" << endl;
    cout << "  ##\033[31m                                                                                                         \033[32m\t  ##" << endl;
    cout << "  \\################################################################################################################/" << endl;
    cout << "   \\##############################################################################################################/\n" << endl;
    cout << "            ____" << endl;
    cout << "\033[32m      _,.-'`_ o `;__,                \033[1;33m ____   _  _    ____          _  _      _    \n";
    cout << "\033[32m       _.-'` '---'  '                \033[1;33m|  _ \\ (_)| |  |  _ \\        (_)| |    | |\n";
    cout << "\033[32m                    ____             \033[1;33m| |_) | _ | |_ | |_) | _   _  _ | |  __| |\n";
    cout << "\033[32m                 .'`_ o `;__,        \033[1;33m|  _ < | || __||  _ < | | | || || | / _` | / _ \\| '__|\n";
    cout << "\033[32m       .       .'.'` '---'`  '       \033[1;33m| |_) || || |_ | |_) || |_| || || || (_| ||  __/| |   \n";
    cout << "\033[32m       .`-...-'.'                    \033[1;33m|____/ |_| \\__||____/  \\__,_||_||_| \\__,_| \\___||_|   \n";   
    cout << "\033[32m        `-...-'                      \033[1;33m _____                    _               _    _     \n";
    cout << "\033[32m                        _,.--.       \033[1;33m|  __ \\                  | |             | |  (_) \n";
    cout << "\033[32m    --..,_           .'`__ o  `;__   \033[1;33m| |__) | _ __   ___    __| | _   _   ___ | |_  _   ___   _ __   ___\n";
    cout << "\033[32m       `'.'.       .'.'`  '---'`  '  \033[1;33m|  ___/ | '__| / _ \\  / _` || | | | / __|| __|| | / _ \\ | '_ \\ / __|\n";
    cout << "\033[32m          '.`-...-'.'                \033[1;33m| |     | |   | (_) || (_| || |_| || (__ | |_ | || (_) || | | |\\__ \\\n";
    cout << "\033[32m            `-...-'                  \033[1;33m|_|     |_|    \\___/  \\__,_| \\__,_| \\___| \\__||_| \\___/ |_| |_|\\___/\n";
    Sleep(5000);
	
    design();
    Setup();
    while (!gameOver)
    {
        Draw();
        Input();
        Logic();
        Sleep(10); //sleep(10);
    }
    return 0;
}
